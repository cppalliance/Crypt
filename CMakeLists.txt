# Generated by `boostdep --cmake crypt`
# Copyright 2020, 2021 Peter Dimov
# Copyright 2023 Matt Borland
# Distributed under the Boost Software License, Version 1.0.
# https://www.boost.org/LICENSE_1_0.txt

cmake_minimum_required(VERSION 3.24)

project(boost_crypt VERSION 1.0.0 LANGUAGES CXX)

option(BOOST_CRYPT_ENABLE_CUDA "Build with CUDA" OFF)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

if(BOOST_CRYPT_ENABLE_CUDA)

    enable_language(CUDA)

    set(CMAKE_CUDA_STANDARD 20)
    set(CMAKE_CUDA_STANDARD_REQUIRED ON)

    set(CMAKE_CUDA_EXTENSIONS OFF)

    set(CMAKE_CUDA_FLAGS "${CMAKE_CUDA_FLAGS} --expt-relaxed-constexpr")

    find_package(CUDAToolkit REQUIRED)

endif()

add_library(boost_crypt INTERFACE)

add_library(Boost::crypt ALIAS boost_crypt)

target_include_directories(boost_crypt INTERFACE include)

target_compile_features(boost_crypt INTERFACE cxx_std_20)

if(BUILD_TESTING AND EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/test/CMakeLists.txt")

    add_subdirectory(test)

endif()

if(CMAKE_SOURCE_DIR STREQUAL CMAKE_CURRENT_SOURCE_DIR)

    include(GNUInstallDirs)
    install(DIRECTORY "include/" DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}")

endif()
