// Copyright 2024 Matt Borland
// Copyright 2024 Christopher Kormanyos
// Distributed under the Boost Software License, Version 1.0.
// https://www.boost.org/LICENSE_1_0.txt

#include <boost/crypt/hash/sha512.hpp>

#include "test_nist_cavs_detail.hpp"

auto main() -> int
{
  bool result_is_ok { true };

    {
        nist::cavs::test_vector_container_type my_test_vectors_monte { };

        std::vector<std::uint8_t>
        seed_init
        (
            {
                0x4a, 0xe2, 0x71, 0xaf, 0x68, 0x53, 0xff, 0xa1, 0xfc, 0x99, 0x64, 0x10, 0x16, 0x59, 0x3f, 0x6c, 0x73, 0x28, 0x63, 0x91, 0x95, 0x4d, 0x88, 0xa4, 0x19, 0xc8, 0x40, 0x3e, 0x46, 0x94, 0x2c, 0xcd, 0xe2, 0x2a, 0x6f, 0x37, 0x49, 0x46, 0x63, 0xc0, 0xc0, 0xed, 0x8b, 0x2d, 0x06, 0xaf, 0xc9, 0x29, 0x2c, 0x2a, 0xd1, 0xe9, 0xa7, 0xcf, 0xde, 0x0c, 0xa4, 0xe9, 0xa4, 0xc5, 0x9b, 0xda, 0x85, 0x3b
            }
        );

        static_cast<void>(nist::cavs::parse_file_monte("SHA512Monte.rsp", my_test_vectors_monte));

        result_is_ok = (nist::cavs::test_vectors_monte<boost::crypt::sha512_hasher>(my_test_vectors_monte, seed_init) && result_is_ok);

        BOOST_TEST(result_is_ok);
    }

  return boost::report_errors();
}
