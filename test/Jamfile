# Copyright 2023 - 2024 Matt Borland
# Copyright 2023 - 2024 Christopher Kormanyos
# Distributed under the Boost Software License, Version 1.0.
# https://www.boost.org/LICENSE_1_0.txt

require-b2 5.0.1 ;
import-search /boost/config/checks ;
import config : requires ;
import modules ;
import testing ;

project : requirements

  <library>/boost/uuid//boost_uuid

  <toolset>gcc:<cxxflags>-Wall
  <toolset>gcc:<cxxflags>-Wextra

  # Clang-Cl gives errors that are incorrect or irrelevant (e.g. C++98 compat)
  #<toolset>clang:<cxxflags>-Wall
  #<toolset>clang:<cxxflags>-Wextra

  <toolset>msvc:<warnings>all

  # Additional flags by request
  <toolset>gcc:<cxxflags>-Wsign-conversion
  <toolset>gcc:<cxxflags>-Wconversion
  <toolset>gcc:<cxxflags>-Wundef
  <toolset>gcc:<cxxflags>-Wold-style-cast
  #<toolset>gcc:<cxxflags>-Wduplicated-branches
  <toolset>gcc:<cxxflags>-Wfloat-equal

  <toolset>clang:<cxxflags>-Wsign-conversion
  <toolset>clang:<cxxflags>-Wconversion
  <toolset>clang:<cxxflags>-Wundef
  <toolset>clang:<cxxflags>-Wold-style-cast
  <toolset>clang:<cxxflags>-Wfloat-equal

  <toolset>msvc:<warnings-as-errors>on
  <toolset>clang:<warnings-as-errors>on
  <toolset>gcc:<warnings-as-errors>on

  [ requires cxx14_decltype_auto cxx14_generic_lambdas cxx14_return_type_deduction cxx14_variable_templates cxx14_constexpr ]
  ;


# ODR Violations
run link_1.cpp link_2.cpp link_3.cpp ;

# Basic Testing
run quick.cpp ;
run test_md5.cpp ;
run test_sha1.cpp ;
run test_sha224.cpp ;
run test_sha256.cpp ;
run test_sha384.cpp ;
run test_sha512.cpp ;
run test_sha512_224.cpp ;
run test_sha512_256.cpp ;
run test_sha3_512.cpp ;
run test_sha3_384.cpp ;
run test_sha3_256.cpp ;
run test_sha3_224.cpp ;
run test_shake128.cpp ;
run test_shake256.cpp ;

run test_hmac.cpp ;

run test_hmac_drbg.cpp ;

# NIST standard testing
run test_nist_cavs_sha1_monte.cpp ;
run test_nist_cavs_sha1_short_long.cpp ;
run test_nist_cavs_sha1_hmac.cpp ;

run test_nist_cavs_sha224_monte.cpp ;
run test_nist_cavs_sha224_short_long.cpp ;
run test_nist_cavs_sha224_hmac.cpp ;

run test_nist_cavs_sha256_monte.cpp ;
run test_nist_cavs_sha256_short_long.cpp ;
run test_nist_cavs_sha256_hmac.cpp ;

run test_nist_cavs_sha384_monte.cpp ;
run test_nist_cavs_sha384_short_long.cpp ;
run test_nist_cavs_sha384_hmac.cpp ;

run test_nist_cavs_sha512_monte.cpp ;
run test_nist_cavs_sha512_short_long.cpp ;
run test_nist_cavs_sha512_hmac.cpp ;

run test_nist_cavs_sha512_224_monte.cpp ;
run test_nist_cavs_sha512_224_short_long.cpp ;
run test_nist_cavs_sha512_224_hmac.cpp ;

run test_nist_cavs_sha512_256_monte.cpp ;
run test_nist_cavs_sha512_256_short_long.cpp ;
run test_nist_cavs_sha512_256_hmac.cpp ;

run test_nist_cavs_sha3_512_monte.cpp ;
run test_nist_cavs_sha3_512_short_long.cpp ;
run test_nist_cavs_sha3_512_hmac.cpp ;

run test_nist_cavs_sha3_384_monte.cpp ;
run test_nist_cavs_sha3_384_short_long.cpp ;
run test_nist_cavs_sha3_384_hmac.cpp ;

run test_nist_cavs_sha3_256_monte.cpp ;
run test_nist_cavs_sha3_256_short_long.cpp ;
run test_nist_cavs_sha3_256_hmac.cpp ;

run test_nist_cavs_sha3_224_monte.cpp ;
run test_nist_cavs_sha3_224_short_long.cpp ;
run test_nist_cavs_sha3_224_hmac.cpp ;

run test_nist_cavs_shake128_short_long.cpp ;
run test_nist_cavs_shake128_monte.cpp ;
run test_nist_cavs_shake128_variable_output.cpp ;

run test_nist_cavs_shake256_short_long.cpp ;
run test_nist_cavs_shake256_monte.cpp ;
run test_nist_cavs_shake256_variable_output.cpp ;
