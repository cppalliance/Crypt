// Copyright 2024 Matt Borland
// Copyright 2024 Christopher Kormanyos
// Distributed under the Boost Software License, Version 1.0.
// https://www.boost.org/LICENSE_1_0.txt

#include <boost/crypt/hash/sha3_512.hpp>

#include "test_nist_cavs_detail.hpp"

auto main() -> int
{
  bool result_is_ok { true };

    {
        nist::cavs::test_vector_container_type my_test_vectors_monte { };

        std::vector<std::uint8_t>
        seed_init
        (
            {
                0x76, 0x4a, 0x55, 0x11, 0xf0, 0x0d, 0xbb, 0x0e, 0xae, 0xf2, 0xeb, 0x27, 0xad, 0x58, 0xd3, 0x5f, 0x74, 0xf5, 0x63, 0xb8, 0x8f, 0x78, 0x9f, 0xf5, 0x3f, 0x6c, 0xf3, 0xa4, 0x70, 0x60, 0xc7, 0x5c, 0xeb, 0x45, 0x54, 0x44, 0xcd, 0x17, 0xb6, 0xd4, 0x38, 0xc0, 0x42, 0xe0, 0x48, 0x39, 0x19, 0xd2, 0x49, 0xf2, 0xfd, 0x37, 0x27, 0x74, 0x64, 0x7d, 0x25, 0x45, 0xcb, 0xfa, 0xd2, 0x0b, 0x4d, 0x31
            }
        );

        static_cast<void>(nist::cavs::parse_file_monte("SHA3_512Monte.rsp", my_test_vectors_monte));

        result_is_ok = (nist::cavs::test_vectors_monte<boost::crypt::sha3_512_hasher>(my_test_vectors_monte, seed_init) && result_is_ok);

        BOOST_TEST(result_is_ok);
    }

  return boost::report_errors();
}
